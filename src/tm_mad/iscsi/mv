#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2012, OpenNebula Project Leads (OpenNebula.org)             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# MV <hostA:system_ds/disk.i|hostB:system_ds/disk.i>
#    <hostA:system_ds/|hostB:system_ds/>
#   - hostX is the target host to deploy the VM
#   - system_ds is the path for the system datastore in the host

SRC=$1
DST=$2

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

. $TMCOMMON

DRIVER_PATH=$(dirname $0)

source ${DRIVER_PATH}/../../datastore/iscsi/iscsi.conf

#-------------------------------------------------------------------------------
# Return if moving a disk, we will move them when moving the whole system_ds
# directory for the VM
#-------------------------------------------------------------------------------
SRC_PATH=`arg_path $SRC`
DST_PATH=`arg_path $DST`

SRC_HOST=`arg_host $SRC`
DST_HOST=`arg_host $DST`

DST_DIR=`dirname $DST_PATH`

if [ `is_disk $SRC_PATH` -eq 0 ]; then
    ssh_make_path $DST_HOST $DST_DIR

    log "Moving $SRC to $DST"

    exec_and_log "$SCP -r $SRC $DST" "Could not copy $SRC to $DST"

    ssh_exec_and_log "$SRC_HOST" "rm -rf $SRC_PATH" \
        "Could not remove $SRC_HOST:$SRC_PATH"

	exit 0
fi

if [ "$SRC" == "$DST" ]; then
    log "Not moving $SRC to $DST, they are the same path"
	exit 0
fi

if is_iscsi "$SRC_HOST"; then
   log "Logging out of $IQN in $SRC_HOST"

    LOGOUT_CMD=$(cat <<EOF
        set -e
        IQN=\$(readlink $SRC_PATH |grep -o 'iqn.*$')
        IQN=\${IQN%-lun-1}
        $SUDO $(iscsiadm_logout "\$IQN")
EOF
)
    ssh_exec_and_log "$SRC_HOST" "$LOGOUT_CMD" \
        "Error logging out $SRC_HOST:$SRC_PATH (IQN)"
fi

if is_iscsi "$DST_HOST"; then
    log "Logging in to IQN in $SRC_HOST"

    log "Getting IQN from $SRC_HOST:$SRC_PATH"

    IQN=$($SSH "$SRC_HOST" "readlink $SRC_PATH |grep -o 'iqn.*$'" )
    IQN=${IQN%-lun-1}

    if [ -z "$IQN" ]; then
        log_error "Error getting IQN"
        exit 1
    fi

    TARGET_HOST=$(iqn_get_host "$IQN")

    LOGIN_CMD=$(cat <<EOF
        set -e
        mkdir -p $DST_DIR
        $SUDO $(iscsiadm_discovery "$TARGET_HOST")
        $SUDO $(iscsiadm_login "$IQN" "$TARGET_HOST")
        sleep 1
        DISK_BY_PATH=\$(ls /dev/disk/by-path/*$IQN-lun-1)
        ln -sf "\$DISK_BY_PATH" "$DST_PATH"
EOF
)

    ssh_exec_and_log "$DST_HOST" "$LOGIN_CMD" \
        "Error logging in $IQN"
fi


exit 0
